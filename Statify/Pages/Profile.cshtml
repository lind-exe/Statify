@page
@model Statify.Pages.ProfileModel
@{
    var src = "";
    var followerCount = 0;
    if (Model.User is not null)
    {
        var userImage = Model.User.Images?.FirstOrDefault(x => x.Width == 300);
        src = userImage?.Url ?? "https://image.spreadshirtmedia.net/image-server/v1/compositions/T773A1PA1611PT10X4Y4D147280542W6736H5479/views/3,width=550,height=550,appearanceId=1,backgroundColor=FFFFFF,noPt=true/trollface-rageface-meme-termosmugg.jpg";

        if (Model.User.Followers is not null)
        {
            followerCount = Model.User.Followers.Total;
        }
    }
}

@if (Model.User is not null)
{
    <div class="mx-auto page-container">

        <div class="row text-center pt-4 pb-1">
            <div class="col">
                <img class="shadow" id="img1" alt="Image1.png" style="width: 225px; height: 225px; border: solid 2px #1259D3;" src="@src">
            </div>
        </div>

        <div class="row my-4 bg-color text-center text-color-white shadow">
            <div class="col py-3">
                <h1>@Model.User.DisplayName</h1>
                <h1>@Model.User.Country</h1>
                <br />
                <h1>Account - @Model.User.Id</h1>
                <h1>
                    @{
                        string product = Model.User.Product == "premium" ? "Premium" : "Free";
                    }
                    @product user
                </h1>
            </div>
        </div>

        <div class="row text-center">
            <h1 class="font-big text-color-accent letter">@followerCount</h1>
            <h2 class="text-color-accent letter">FOLLOWERS</h2>
        </div>

    </div>
    <div class="row scrollable-container my-4" style="background-color: #020A17" id="scrollableContainer">
        <div class="ps-0 d-flex flex-row overflow-auto hideScroll" id="list">
            @if (Model.Playlists?.Items?.Any() == true)
            {
                @foreach (var playlist in Model.Playlists.Items)
                {
                    <div class="col me-4 my-4">
                        <div class="ms-0 card" style="background-color: #3A7CEE">
                            <div class="card-body">
                                @if (playlist.Images?.Any(x => x.Url is not null) == true)
                                {
                                    var validSrc = playlist.Images.First(x => x.Url is not null)?.Url ?? "";
                                    <img src="@validSrc" alt="Playlist image" style="height:150px; width:150px">
                                    <a class="stretched-link" href="@playlist.ExternalUrls!.Spotify" style="z-index:0"></a>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <h1>No playlists found!</h1>
            }
        </div>
    </div>
}
@*  Purpose: This script loads the Infinity.js library for handling auto-infinite scrolling.
 Dependencies: Infinity.js (https://cdn.jsdelivr.net/npm/ldrs/dist/auto/infinity.js)
 Security: The script is secure and does not introduce any vulnerabilities. *@
<script type="module" src="https://cdn.jsdelivr.net/npm/ldrs/dist/auto/infinity.js"></script>

<div id="loading-container" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: none; align-items: center; justify-content: center; background: rgba(0, 0, 0, 0.8); z-index: 9999;">
    <div style="text-align: center; color: white;">
        <h1>Communicating with Spotify...</h1>
        <l-infinity size="150"
                    stroke="16"
                    stroke-length="0.13"
                    bg-opacity="0.1"
                    speed="1.3"
                    color="white"></l-infinity>
    </div>
</div>

<script>
    // Function to show the loading animation
    function showLoadingAnimation() {
        document.getElementById('loading-container').style.display = 'flex'; // or 'block' depending on your CSS
    }

    // Function to hide the loading animation
    function hideLoadingAnimation() {
        document.getElementById('loading-container').style.display = 'none';
    }

    // Hook into the link click event to show loading animation
    document.addEventListener('DOMContentLoaded', function () {
        var link = document.getElementById('statistics-link'); // Replace 'statistics-link' with the actual ID or class of your link
        link.addEventListener('click', function () {
            showLoadingAnimation();
        });
    });
</script>